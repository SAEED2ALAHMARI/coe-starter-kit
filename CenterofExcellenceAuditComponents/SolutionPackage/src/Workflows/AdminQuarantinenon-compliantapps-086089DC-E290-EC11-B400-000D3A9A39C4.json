{
  "properties": {
    "connectionReferences": {
      "shared_commondataserviceforapps_1": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "admin_CoECoreDataverse"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      },
      "shared_commondataserviceforapps": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "admin_CoECoreDataverse"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "Quarantine Apps after x days of non-compliance (admin_QuarantineAppsafterxdaysofnoncompliance)": {
          "defaultValue": 7,
          "type": "Int",
          "metadata": {
            "schemaName": "admin_QuarantineAppsafterxdaysofnoncompliance",
            "description": "Compliance â€“ If using the Compliance flow for apps to gather compliance details from makers, specify if you want to quarantine apps if they're not compliant. Specified in days. "
          }
        },
        "Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)": {
          "defaultValue": "https://flow.microsoft.com/manage/environments/",
          "type": "String",
          "metadata": {
            "schemaName": "admin_PowerAutomateEnvironmentVariable",
            "description": "Inventory - REQUIRED. Environment, including geographic location, for Power Automate - Ex for commercial: https://flow.microsoft.com/manage/environments/"
          }
        }
      },
      "triggers": {
        "Recurrence": {
          "recurrence": {
            "frequency": "Day",
            "interval": 1,
            "startTime": "2022-02-18T10:00:00Z"
          },
          "metadata": {
            "operationMetadataId": "07de233e-b3c0-4307-940f-3ec33a55a393"
          },
          "type": "Recurrence"
        }
      },
      "actions": {
        "Quarantine_non-compliant_apps_SCOPE": {
          "actions": {
            "List_apps_for_quarantine": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "0e2f71f6-5e66-435d-9a0e-f7bc4ffca29a"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps_1",
                  "operationId": "ListRecords",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_apps",
                  "$select": "admin_appenvironmentdisplayname,admin_appid,admin_appownerdisplayname,_admin_appenvironment_value,_admin_appowner_value,admin_displayname",
                  "$filter": "Microsoft.Dynamics.CRM.OlderThanXDays(PropertyName='admin_compliancerequestedon',PropertyValue=@{parameters('Quarantine Apps after x days of non-compliance (admin_QuarantineAppsafterxdaysofnoncompliance)')}) and Microsoft.Dynamics.CRM.OnOrAfter(PropertyName='admin_compliancerequestedon',PropertyValue='12/1/1899') and admin_adminrequirementriskassessmentstate eq 597910001 and (admin_quarantineapp eq null or admin_quarantineapp eq false) and admin_AppEnvironment/admin_excusefromappquarantineflow eq false and admin_AppEnvironment/admin_environmentid ne null and admin_AppOwner/admin_makerid ne null",
                  "$expand": "admin_AppEnvironment($select=admin_environmentid,admin_displayname),admin_AppOwner($select=admin_userprincipalname)"
                },
                "authentication": "@parameters('$authentication')"
              },
              "description": "Gets apps in environments that are included in the quarantine flow and filters apps where compliance has been requested more than x days ago and that are not already in quarantine",
              "runtimeConfiguration": {
                "paginationPolicy": {
                  "minimumItemCount": 100000
                }
              }
            },
            "Apply_to_each": {
              "foreach": "@outputs('List_apps_for_quarantine')?['body/value']",
              "actions": {
                "Update_a_row": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "3008fe4d-7c74-44a6-a794-2525e50a6d66"
                  },
                  "type": "OpenApiConnection",
                  "inputs": {
                    "host": {
                      "connectionName": "shared_commondataserviceforapps_1",
                      "operationId": "UpdateRecord",
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                    },
                    "parameters": {
                      "entityName": "admin_apps",
                      "recordId": "@items('Apply_to_each')?['admin_appid']",
                      "item/admin_quarantineapp": true
                    },
                    "authentication": "@parameters('$authentication')"
                  }
                }
              },
              "runAfter": {
                "List_apps_for_quarantine": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "22d2a4b4-4c45-4a05-a067-ac0ff88a3f29"
              },
              "type": "Foreach"
            }
          },
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "c7b06595-0c76-495b-a2f2-8fb446b57b88"
          },
          "type": "Scope"
        },
        "Error_Handling": {
          "actions": {
            "Create_a_new_record_-_Sync_Flow_Errors": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "87961ff0-e261-4890-9ab9-a53f88fe0de5"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "CreateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_syncflowerrorses",
                  "item/admin_name": "@workflow()?['tags']['flowDisplayName']",
                  "item/admin_flowinstanceurl": "@concat(parameters('Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)'), workflow()?['tags']['environmentName'], '/flows/', workflow()?['name'], '/runs/', workflow()?['run']['name'])"
                },
                "authentication": "@parameters('$authentication')",
                "retryPolicy": {
                  "type": "exponential",
                  "count": 10,
                  "interval": "PT10S"
                }
              }
            },
            "Terminate_2": {
              "runAfter": {
                "Update_Last_Run_Fail": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "9e5a2a18-dba2-47a1-96d5-3356f4348e5a"
              },
              "type": "Terminate",
              "inputs": {
                "runStatus": "Failed",
                "runError": {
                  "code": "500",
                  "message": "Get Environments Failed"
                }
              }
            },
            "Get_ID_Fail": {
              "runAfter": {
                "Create_a_new_record_-_Sync_Flow_Errors": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "47329bf2-8aac-400d-9778-a793b4f1180f"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "ListRecords",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "$select": "admin_coesolutionmetadataid",
                  "$filter": "admin_objectname eq '@{workflow()?['tags']['flowDisplayName']}'",
                  "$top": 1
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Update_Last_Run_Fail": {
              "runAfter": {
                "Get_ID_Fail": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "c63eb7cc-6101-4567-b520-a4a8881264e9"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "UpdateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "recordId": "@first(outputs('Get_ID_Fail')?['body/value'])?['admin_coesolutionmetadataid']",
                  "item/admin_lastrun": "@utcNow()",
                  "item/admin_lastrunpassed": false
                },
                "authentication": "@parameters('$authentication')"
              }
            }
          },
          "runAfter": {
            "Quarantine_non-compliant_apps_SCOPE": [
              "Failed"
            ]
          },
          "metadata": {
            "operationMetadataId": "38ae684e-622d-42ea-abd2-ee571aee3a5f"
          },
          "type": "Scope"
        },
        "Update_last_run_as_pass": {
          "actions": {
            "Update_Last_Run_Successful": {
              "runAfter": {
                "Get_ID_Pass": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "78ef70e5-7f67-4737-9a02-8533f12caa19"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "UpdateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "recordId": "@first(outputs('Get_ID_Pass')?['body/value'])?['admin_coesolutionmetadataid']",
                  "item/admin_lastrun": "@utcNow()",
                  "item/admin_lastrunpassed": true
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Get_ID_Pass": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "f4f314b6-89d3-4056-af1c-73115e7d6bd1"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "ListRecords",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "$select": "admin_coesolutionmetadataid",
                  "$filter": "admin_objectname eq '@{workflow()?['tags']['flowDisplayName']}'",
                  "$top": 1
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Catch_-_not_ready_to_take_last_run_date": {
              "runAfter": {
                "Update_Last_Run_Successful": [
                  "Failed"
                ]
              },
              "metadata": {
                "operationMetadataId": "f88cdefe-c402-49d7-8f4a-934475e6f741"
              },
              "type": "Compose",
              "inputs": "Catch - not ready to take last run date"
            }
          },
          "runAfter": {
            "Error_Handling": [
              "Skipped"
            ]
          },
          "metadata": {
            "operationMetadataId": "5c140442-d939-4ca4-8ec8-d1ee2bed4a81"
          },
          "type": "Scope"
        }
      }
    },
    "templateName": ""
  },
  "schemaVersion": "1.0.0.0"
}